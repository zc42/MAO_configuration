spring.application.name=resource-service
server.port=${RESOURCE_SERVICE_PORT:8081}
#--------
logging.level.root=INFO
spring.jpa.open-in-view=false
spring.servlet.multipart.max-file-size=15MB
spring.servlet.multipart.max-request-size=15MB
spring.jackson.serialization.indent-output=true
#--------
#db
spring.datasource.url=${RESOURCE_DB_URL:jdbc:postgresql://localhost:5433/resource_db}
spring.datasource.username=${RESOURCE_DB_USER:postgres}
spring.datasource.password=${RESOURCE_DB_PASSWORD:postgres}
spring.liquibase.enabled=${SPRING_LIQUIBASE_ENABLED:false}
#--------
#eureka
eureka.client.serviceUrl.defaultZone=${EUREKA_SERVER_URL:http://localhost:8761/eureka/}
eureka.instance.preferIpAddress=${RESOURCE_SERVICE_EUREKA_INSTANCE_PREFER_IP:false}
#--------
#was
aws.s3.endpoint=${AWS_S3_ENDPOINT:http://localhost:4566}
aws.region=${AWS_REGION:us-east-1}
aws.accessKeyId=${AWS_ACCESS_KEY:test}
aws.secretAccessKey=${AWS_SECRET_KEY:test}
#--------
#rabbit
rabbitmq.queue.name=${RABBITMQ_QUEUE_NAME:resource.command.queue}
rabbitmq.topic.exchange=${RABBITMQ_TOPIC_EXCHANGE:resource.command.topic.exchange}
rabbitmq.topic.routing.key=${RABBITMQ_TOPIC_ROUTING_KEY:resource.command.topic}
resource.command.save.metadata.name=${RESOURCE_COMMAND_SAVE_METADATA_NAME:save.metadata}
resource.command.delete.metadata.name=${RESOURCE_COMMAND_DELETE_METADATA_NAME:delete.metadata}
#--
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:admin}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:admin}
management.endpoints.web.exposure.include=health, info, refresh
#--------
#storage.service
storage.service.url=/storages
storage.service.base.url=${STORAGE_SERVICE_BASE_URL:http://storage-service}
#------------
logging.level.resilience4j:DEBUG
# --- Circuit Breaker configuration ---
#resilience4j.circuitbreaker.instances.storage-service.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.storage-service.slidingWindowSize=5
resilience4j.circuitbreaker.instances.storage-service.failureRateThreshold=50
resilience4j.circuitbreaker.instances.storage-service.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.storage-service.permittedNumberOfCallsInHalfOpenState=2
#resilience4j.circuitbreaker.instances.storage-service.ignoreExceptions=org.springframework.web.client.HttpServerErrorException.NotImplemented

# --- Retry configuration ---
resilience4j.retry.instances.storage-service.maxAttempts=3
resilience4j.retry.instances.storage-service.waitDuration=500ms
#resilience4j.retry.instances.storage-service.retryExceptions=java.io.IOException,org.springframework.web.client.ResourceAccessException,java.util.concurrent.TimeoutException

#**********************************************************************
#**********************************************************************
#**********************************************************************

# Resilience4j CircuitBreaker Configuration
resilience4j.circuitbreaker.instances.backendA.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.backendA.slidingWindowSize=100

resilience4j.circuitbreaker.instances.backendB.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.backendB.slidingWindowSize=10
resilience4j.circuitbreaker.instances.backendB.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.backendB.slidingWindowType=TIME_BASED
resilience4j.circuitbreaker.instances.backendB.minimumNumberOfCalls=20
resilience4j.circuitbreaker.instances.backendB.waitDurationInOpenState=50s
resilience4j.circuitbreaker.instances.backendB.failureRateThreshold=50
resilience4j.circuitbreaker.instances.backendB.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.backendB.recordFailurePredicate=io.github.robwin.exception.RecordFailurePredicate

# Resilience4j Retry Configuration
resilience4j.retry.instances.backendA.maxAttempts=3
resilience4j.retry.instances.backendA.waitDuration=10s
resilience4j.retry.instances.backendA.enableExponentialBackoff=true
resilience4j.retry.instances.backendA.exponentialBackoffMultiplier=2
#resilience4j.retry.instances.backendA.retryExceptions=org.springframework.web.client.HttpServerErrorException,java.io.IOException
#resilience4j.retry.instances.backendA.ignoreExceptions=io.github.robwin.exception.BusinessException

resilience4j.retry.instances.backendB.maxAttempts=3
resilience4j.retry.instances.backendB.waitDuration=1s
resilience4j.retry.instances.backendB.retryExceptions=org.springframework.web.reactive.function.client.WebClientResponseException
#resilience4j.retry.instances.backendB.ignoreExceptions=io.github.robwin.exception.BusinessException

# Resilience4j Bulkhead Configuration
resilience4j.bulkhead.instances.backendA.maxConcurrentCalls=10

resilience4j.bulkhead.instances.backendB.maxWaitDuration=10ms
resilience4j.bulkhead.instances.backendB.maxConcurrentCalls=20

# Resilience4j ThreadPool Bulkhead Configuration
resilience4j.thread-pool-bulkhead.instances.backendC.maxThreadPoolSize=1
resilience4j.thread-pool-bulkhead.instances.backendC.coreThreadPoolSize=1
resilience4j.thread-pool-bulkhead.instances.backendC.queueCapacity=1
resilience4j.thread-pool-bulkhead.instances.backendC.writableStackTraceEnabled=true

# Resilience4j RateLimiter Configuration
resilience4j.ratelimiter.instances.backendA.limitForPeriod=10
resilience4j.ratelimiter.instances.backendA.limitRefreshPeriod=1s
resilience4j.ratelimiter.instances.backendA.timeoutDuration=0
resilience4j.ratelimiter.instances.backendA.registerHealthIndicator=true
resilience4j.ratelimiter.instances.backendA.eventConsumerBufferSize=100

resilience4j.ratelimiter.instances.backendB.limitForPeriod=6
resilience4j.ratelimiter.instances.backendB.limitRefreshPeriod=500ms
resilience4j.ratelimiter.instances.backendB.timeoutDuration=3s

# Resilience4j TimeLimiter Configuration
resilience4j.timelimiter.instances.backendA.timeoutDuration=2s
resilience4j.timelimiter.instances.backendA.cancelRunningFuture=true

resilience4j.timelimiter.instances.backendB.timeoutDuration=1s
resilience4j.timelimiter.instances.backendB.cancelRunningFuture=false
